---
- name: Look for the profile project in the build dir
  stat:
    path: "{{ codebase_dir }}{{ deploy_drupal_profiles_base_folder }}/{{ install_profile }}"
  register: profile_project_included

- name: Make sure base folder for profiles exists (if profile not found)
  file:
    path: "{{ codebase_dir }}{{ deploy_drupal_profiles_base_folder }}"
    state: directory
    owner: "{{ app_user }}"
    group: "{{ app_group }}"
  become: yes
  become_user: root
  when: not profile_project_included.stat.exists

- name: rsync the profile contents inside the build dir
  command: "/usr/bin/rsync --delay-updates -F --compress --archive {{ profiles_dir }}/ {{ codebase_dir }}{{ deploy_drupal_profiles_base_folder }}"
  become: yes

- name: Look for libraries/modules/themes inside the profile project
  stat:
    path: "{{ profiles_dir }}/{{ install_profile }}/{{ item }}"
  with_items:
  - libraries
  - themes
  - modules
  register: profile_resources_stat_output

- name: Make sure sites/all/(libraries/modules/themes) exists in the codebase dir
  file:
    path: "{{ codebase_dir }}/sites/all/{{ item.item }}"
    state: directory
    owner: "{{ app_user }}"
    group: "{{ app_group }}"
  with_items: "{{ profile_resources_stat_output.results }}"
  when:
  - item.stat.exists
  become: yes
  become_user: root

- name: rsync modules/libraries/themes from the profile to sites/all
  command: "/usr/bin/rsync --delay-updates -F --compress --archive {{ profiles_dir }}/{{ install_profile }}/{{ item.item }}/ {{ codebase_dir }}/sites/all/{{ item.item }}"
  become: yes
  with_items: "{{ profile_resources_stat_output.results }}"
  when:
  - item.stat.exists
