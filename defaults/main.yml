---
# Location of the webserver sites
deploy_webroot: "{{ ansible_local.apache2.www }}"

# Default language, fallback value
app_languages: ['en']

# Modules to enable/disable/uninstall per app deployment
deploy_modules_present_app: []
deploy_modules_absent_app: []
# Modules to enable/disable/uninstall per app environment
deploy_modules_present_env: []
deploy_modules_absent_env: []

# String to identify the build based on today's date like 20201224_1824
deploy_build_id: "{{ ansible_date_time['year'] }}{{ ansible_date_time['month'] }}{{ ansible_date_time['day'] }}_{{ ansible_date_time['hour'] }}{{ ansible_date_time['minute'] }}"

# Host in the mysql group of the current environment
deploy_mysql_host: 'localhost'

# List of hostnames in the varnish group of the current environment
deploy_varnish_servers: [ "localhost" ]
# Name of the drupal module to control Varnish cache
deploy_varnish_drupal_module: 'varnish'

# Version of the repository to check out (full 40-character SHA-1 hash, the literal string HEAD, a branch name, or a tag name).
deploy_git_repo_version: master
# can be git, ssh, http or https
deploy_git_repo_protocol: "ssh"
deploy_git_repo_server: ""
deploy_git_repo_path: ""
deploy_git_repo_user: ""
deploy_git_repo_pass: ""
deploy_accept_hostkey: no

deploy_reset_admin_pass: False
# Drupal admin password to set, when deploy_reset_admin_pass is True
deploy_drupal_admin_password: "drups1ble"

# Is this app spanning multiple internet domains?
deploy_multiple_domains: False

# Use an install profile?
deploy_install_profile_enabled: False
# Custom install profile name
deploy_custom_install_profile: ''
# Drupal.org install profile name (ie. commerce_kickstart or bear)
deploy_d_o_install_profile: ''

# Should Drupsible provision New Relic packages?
provision_new_relic: False

# Should Drupsible run drush make after grabbing the code?
deploy_drush_make_enabled: False
# Name of the makefile to feed drush make with
deploy_drush_makefile: "build-{{ app_name }}.make"

# Should Drupsible perform a backup of the current website before proceeding?
deploy_backup_cur_enabled: False
# Should Drupsible run drush site-install to build the DB from the profile?
deploy_site_install_enabled: False
# Should Drupsible clone the current DB into the build DB
deploy_db_clone_enabled: False
# Should Drupsible look for a DB dump in the controller, upload it and import 
# it into the build DB?
deploy_db_import_enabled: False
# Name of the SQL dump file, can be .sql or .sql.gz
deploy_db_dump_filename: '{{ app_name }}.sql.gz'
# Should Drupsible run drush sql-sync with upstream/source DB?
deploy_db_sync_enabled: False
# Should Drupsible run drush updb, features-revert, registry-rebuild, etc.,
# once the DB has been filled with content? Disable if you are building a 
# clone website.
deploy_rectify_db_enabled: True

# True looks for tarballs (files) to upload and import
deploy_files_import_enabled: False
# Name of the "files" archive
deploy_files_tarball_filename: '{{ app_name }}-files.tar.gz'
# Should Drupsible run drush rsync :%files% with the upstream/source website?
deploy_files_sync_enabled: False
# Should Drupsible copy the files from the current website into the build? 
# Can be combined with deploy_files_sync_enabled=yes
deploy_files_copy_enabled: True

# Should Drupsible setup and configure rsyslog, and enable syslog module?
deploy_syslog_enabled: True

# Should Drupsible perform periodic backups with drush ard?
deploy_backup_enabled: False
# Frequency can be hourly, daily, weekly, monthly, yearly.
deploy_backup_frequency: daily
# Maximun number of backup archives to be kept at all times.
deploy_backup_qty: 7

# Drupal will lookup the real IP of the request in this HTTP header. Confirm this with 
# your CDN if any, as not all CDN send the real IP in this header.
deploy_reverse_proxy_header: 'HTTP_X_FORWARDED_FOR'

# Drupal settings (7 and 8)
# Proxy server 
deploy_proxy_server: ''
deploy_proxy_port: 8080
deploy_proxy_username: ''
deploy_proxy_password: ''
deploy_proxy_user_agent: ''
deploy_proxy_exceptions: 
  - '127.0.0.1'
  - 'localhost'

# The Xdebug extension should not be enabled by default anywhere
deploy_xdebug_enabled: no

# Drupal 8 settings
# Container base class
deploy_container_base_class: '\Drupal\Core\DependencyInjection\Container'
# Config dirs
deploy_config_dirs: []
# Identifier
deploy_identifier: "{{ deploy_build_id }}"

# Default locations of the SSL files in the target host
deploy_pki_crt: '/etc/pki/realms/domain/default.crt'
deploy_pki_key: '/etc/pki/realms/domain/default.key'

# Varnish module parameters
deploy_varnish_variables:
  varnish_version: 4
  varnish_control_terminal: "localhost:{{ deploy_varnish_mgmt_port|default('6082') }}"
  varnish_control_key: "{{ lookup('password', secret + '/credentials/' + inventory_hostname + '/varnish/secret chars=ascii_letters,digits,hexdigits') }}"

# Update translations?
deploy_update_translations_enabled: True
